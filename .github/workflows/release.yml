name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'v1.0.0'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract version from tag
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "version_without_v=${VERSION#v}" >> $GITHUB_OUTPUT
        echo "Released version: ${VERSION}"

    - name: Compute lowercased repository
      id: repo
      run: |
        echo "repo=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ steps.repo.outputs.repo }}:latest
          ghcr.io/${{ steps.repo.outputs.repo }}:${{ steps.version.outputs.version }}
          ghcr.io/${{ steps.repo.outputs.repo }}:${{ steps.version.outputs.version_without_v }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: OpenAPI Analyzer ${{ steps.version.outputs.version }}
        body: |
          ## 🚀 OpenAPI Analyzer ${{ steps.version.outputs.version }}
          
          ### What's New
          - Enhanced OpenAPI specification analysis ${{ steps.version.outputs.version }}
          - Improved security checks
          - Better documentation quality assessment
          - Comprehensive best practice validation
          
          ### Usage
          ```yaml
            name: OpenAPI Analysis

            on:
              push:
                branches: [ main, develop ]
                paths:
                  - '**/*.json'
                  - '**/*.yaml'
                  - '**/*.yml'
              pull_request:
                branches: [ main, develop ]
                paths:
                  - '**/*.json'
                  - '**/*.yaml'
                  - '**/*.yml'
              workflow_dispatch:

            jobs:
              analyze-openapi:
                runs-on: ubuntu-latest
                
                steps:
                - name: Checkout code
                  uses: actions/checkout@v4
                  
                - name: Analyze OpenAPI
                  id: analyze
                  uses: ApyGuard/apyguard_openapi_analysis@main
                  with:
                    # Change this to your OpenAPI file path
                    file: your-openapi-file.json
                    output_format: json
                    
                - name: Display Results
                  run: |
                    echo "OpenAPI Analysis Results:"
                    echo "========================="
                    echo "Valid: ${{ '{{' }} steps.analyze.outputs.is_valid ${{ '}}' }}"
                    echo "Suggestions: ${{ '{{' }} steps.analyze.outputs.suggestions_count ${{ '}}' }}"
                    echo "Operations: ${{ '{{' }} steps.analyze.outputs.operations_count ${{ '}}' }}"
                    echo "Paths: ${{ '{{' }} steps.analyze.outputs.paths_count ${{ '}}' }}"
                    echo "Schemas: ${{ '{{' }} steps.analyze.outputs.schemas_count ${{ '}}' }}"
                    
                - name: Comment on PR
                  if: github.event_name == 'pull_request'
                  uses: actions/github-script@v7
                  with:
                    script: |
                      const analysis = JSON.parse('${{ '{{' }} steps.analyze.outputs.analysis ${{ '}}' }}');
                      const comment = `## 🔍 OpenAPI Analysis Results
                      
                      **Valid**: ${{ '{{' }} analysis.is_valid ? '✅' : '❌' ${{ '}}' }}
                      **Suggestions**: ${{ '{{' }} analysis.suggestions ? analysis.suggestions.length : 0 ${{ '}}' }}
                      **Operations**: ${{ '{{' }} analysis.summary ? analysis.summary.operations_count : 0 ${{ '}}' }}
                      **Paths**: ${{ '{{' }} analysis.summary ? analysis.summary.paths_count : 0 ${{ '}}' }}
                      **Schemas**: ${{ '{{' }} analysis.summary ? analysis.summary.schemas_count : 0 ${{ '}}' }}
                      
                      ${{ '{{' }} analysis.suggestions && analysis.suggestions.length > 0 ? 
                        `### 📋 Top Suggestions:\n\n${{ '{{' }} analysis.suggestions.slice(0, 5).map(s => `- ${'${'}s${'}'}`).join('\\n') ${{ '}}' }}` : 
                        '### ✅ No suggestions found! Your OpenAPI specification looks great! 🎉'
                      ${{ '}}' }}`;
                        
                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: comment
                      });
          ```
          
          ### Docker Image
          ```bash
          docker pull ghcr.io/${{ steps.repo.outputs.repo }}:${{ steps.version.outputs.version }}
          ```
          
          ### Full Changelog
          See the [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}