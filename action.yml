name: "OpenAPI Analyzer"
description: "Analyze OpenAPI documentation and suggest best practices. Supports both single files and entire repositories."
author: "ApyGuard"
branding:
  icon: "search"
  color: "green"
inputs:
  spec_url:
    description: "URL to the OpenAPI specification (JSON or YAML)"
    required: false
  repository:
    description: "GitHub repository to analyze (defaults to callerâ€™s repo)"
    required: false
  file:
    description: "Local OpenAPI file path (relative to repository root)"
    required: false
  github_token:
    description: "GitHub token (defaults to GITHUB_TOKEN) for private repos or higher rate limits"
    required: false
  output_format:
    description: "Output format (json or summary)"
    required: false
    default: "json"

outputs:
  analysis:
    description: "Complete analysis results as JSON string"
  is_valid:
    description: "Boolean indicating if the spec is valid"
  suggestions_count:
    description: "Number of suggestions found"
  operations_count:
    description: "Number of operations in the spec"
  paths_count:
    description: "Number of paths in the spec"
  schemas_count:
    description: "Number of schemas in the spec"
  complexity_score:
    description: "API complexity score (0-1000+)"
  maintainability_score:
    description: "API maintainability score (0-100)"
  security_issues:
    description: "Number of security-related suggestions"
  performance_issues:
    description: "Number of performance-related suggestions"
  design_pattern_issues:
    description: "Number of design pattern suggestions"
  versioning_issues:
    description: "Number of versioning-related suggestions"
  documentation_issues:
    description: "Number of documentation quality suggestions"
  compliance_issues:
    description: "Number of compliance-related suggestions"
  testing_recommendations:
    description: "Number of testing strategy suggestions"
  monitoring_recommendations:
    description: "Number of monitoring/observability suggestions"
  code_generation_opportunities:
    description: "Number of code generation suggestions"
  governance_issues:
    description: "Number of API governance suggestions"
  repository_name:
    description: "Repository name (when analyzing repositories)"
  repository_full_name:
    description: "Full repository name (owner/repo)"
  repository_url:
    description: "Repository URL"
  repository_stars:
    description: "Number of repository stars"
  repository_forks:
    description: "Number of repository forks"
  user_actor:
    description: "GitHub username who triggered the action"
  user_repository:
    description: "Repository where the action was triggered"
  user_workflow:
    description: "Workflow name that triggered the action"
  user_run_id:
    description: "Unique run ID for this action execution"

runs:
  using: "docker"
  image: "Dockerfile"
  env:
    # Pass GitHub defaults into the container
    GITHUB_TOKEN: ${{ inputs.github_token || secrets.GITHUB_TOKEN }}
    GITHUB_REPOSITORY: ${{ github.repository }}
    GITHUB_WORKSPACE: ${{ github.workspace }}
    GITHUB_ACTOR: ${{ github.actor }}
    GITHUB_RUN_ID: ${{ github.run_id }}
    GITHUB_WORKFLOW: ${{ github.workflow }}
